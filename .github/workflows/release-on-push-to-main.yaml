name: Release on push to `main`
on:
  push:
    branches:
      - main
    paths:
      - pyproject.toml
jobs:
  check-publishability:
    if: github.repository != 'UWIT-IAM/example-flask-app'
    runs-on: ubuntu-latest
    outputs:
      publishable: ${{ steps.check.outputs.publish }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
          # note: this probably isn't necessary but the below job was failing April 2023
          # and using an explicit token fixed that
          # this change is here for consistency in actions/checkout@v3 config
          token: ${{ secrets.ACTIONS_PAT }}
      # Only publish if the version has changed; otherwise, we would be
      # re-publishing existing stuff without updating the version, and that
      # could cause problems.
      - run: |
          set -x
          publishable=false
          diff=$(git diff HEAD:pyproject.toml HEAD~1:pyproject.toml) || exit 0
          echo "$diff" | grep '+version ='
          if [[ "$?" == "0" ]]
          then
            publishable=true
          fi
          echo "::set-output name=publish::${publishable}"
        name: Check if the change should be published
        id: check
  build-and-publish:
    needs: [check-publishability]
    if: needs.check-publishability.outputs.publishable == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
        # ran into a wonky checkout@v3 issue where it would reliably fail but only on this second job
        # many github issues around this, no clear answer. Things I tried that did not work
        # - explicit `persist-credentials: true` on both this and the above checkout action
        # - using actions@v2
        with:
          token: ${{ secrets.ACTIONS_PAT }}

      - name: Install and configure poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.create false

      - name: Install app
        run: poetry install

      - run: sudo apt-get -y install jq

      - name: Log in to the Google container registry
        run: ./.github/scripts/gcr-login.sh
        env:
          # UPDATE: If this repository is not in the UWIT-IAM
          # org, you must ensure this secret exists, or update this
          # value to use a secret that does exist. The token
          # should be base64 encoded, and needs to be created by an
          # Aux project administrator.
          #
          # If you are running inside the UWIT-IAM namespace,
          # this is available for all repositories to use.
          GITHUB_TOKEN: ${{ secrets.GCR_TOKEN }}
      - name: Create and push release image; deploy to dev
        run: |
          ./scripts/build.sh --release $(poetry version -s) --cache --deploy dev
